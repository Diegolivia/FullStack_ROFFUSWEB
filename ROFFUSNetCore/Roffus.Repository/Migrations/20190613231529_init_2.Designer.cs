// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Roffus.Repository.Context;

namespace Roffus.Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190613231529_init_2")]
    partial class init_2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Roffus.Domain.Categoria", b =>
                {
                    b.Property<int>("CodCategoria")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreCategoria");

                    b.HasKey("CodCategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Roffus.Domain.ListaMuebles", b =>
                {
                    b.Property<int>("CodLista")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodMueble");

                    b.Property<double>("CoordX");

                    b.Property<double>("CoordY");

                    b.Property<string>("NombreLista");

                    b.Property<double>("Rotacion");

                    b.HasKey("CodLista");

                    b.HasIndex("CodMueble");

                    b.ToTable("ListasMuebles");
                });

            modelBuilder.Entity("Roffus.Domain.Mueble", b =>
                {
                    b.Property<int>("CodMueble")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Alto");

                    b.Property<double>("Ancho");

                    b.Property<int>("CodTienda");

                    b.Property<string>("Descripcion");

                    b.Property<string>("Icono");

                    b.Property<string>("Imagen");

                    b.Property<double>("Largo");

                    b.Property<string>("NombreMueble");

                    b.Property<int>("codSubCategoria");

                    b.HasKey("CodMueble");

                    b.HasIndex("CodTienda");

                    b.HasIndex("codSubCategoria");

                    b.ToTable("Muebles");
                });

            modelBuilder.Entity("Roffus.Domain.Paquete", b =>
                {
                    b.Property<int>("CodPaquete")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodLista");

                    b.Property<int>("CodPlantilla");

                    b.Property<int>("CodUsuario");

                    b.Property<string>("nombrePaquete");

                    b.HasKey("CodPaquete");

                    b.HasIndex("CodLista");

                    b.HasIndex("CodPlantilla");

                    b.HasIndex("CodUsuario");

                    b.ToTable("Paquetes");
                });

            modelBuilder.Entity("Roffus.Domain.Plantilla", b =>
                {
                    b.Property<int>("CodPlantilla")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Alto");

                    b.Property<double>("Ancho");

                    b.Property<string>("Diseño");

                    b.Property<double>("Largo");

                    b.HasKey("CodPlantilla");

                    b.ToTable("Plantillas");
                });

            modelBuilder.Entity("Roffus.Domain.Subcategoria", b =>
                {
                    b.Property<int>("codSubCategoria")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodCategoria");

                    b.Property<string>("nombreSubCategoria");

                    b.HasKey("codSubCategoria");

                    b.HasIndex("CodCategoria");

                    b.ToTable("Subcategorias");
                });

            modelBuilder.Entity("Roffus.Domain.TiendaVirtual", b =>
                {
                    b.Property<int>("CodTienda")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Link");

                    b.Property<string>("NombreTienda");

                    b.HasKey("CodTienda");

                    b.ToTable("TiendasVirtuales");
                });

            modelBuilder.Entity("Roffus.Domain.Usuario", b =>
                {
                    b.Property<int>("CodUsuario")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contraseña");

                    b.Property<string>("Correo");

                    b.Property<DateTime>("FNacimiento");

                    b.Property<string>("Foto");

                    b.Property<string>("NombreUsuario");

                    b.HasKey("CodUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Roffus.Domain.ListaMuebles", b =>
                {
                    b.HasOne("Roffus.Domain.Mueble", "Mueble")
                        .WithMany("ListaMuebles")
                        .HasForeignKey("CodMueble")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Roffus.Domain.Mueble", b =>
                {
                    b.HasOne("Roffus.Domain.TiendaVirtual", "TiendaVirtual")
                        .WithMany("CodMueble")
                        .HasForeignKey("CodTienda")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Roffus.Domain.Subcategoria", "Subcategoria")
                        .WithMany("Muebles")
                        .HasForeignKey("codSubCategoria")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Roffus.Domain.Paquete", b =>
                {
                    b.HasOne("Roffus.Domain.ListaMuebles", "ListaMuebles")
                        .WithMany("Paquetes")
                        .HasForeignKey("CodLista")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Roffus.Domain.Plantilla", "Plantilla")
                        .WithMany("Paquetes")
                        .HasForeignKey("CodPlantilla")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Roffus.Domain.Usuario", "Usuario")
                        .WithMany("Paquetes")
                        .HasForeignKey("CodUsuario")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Roffus.Domain.Subcategoria", b =>
                {
                    b.HasOne("Roffus.Domain.Categoria", "Categoria")
                        .WithMany("Subcategorias")
                        .HasForeignKey("CodCategoria")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
